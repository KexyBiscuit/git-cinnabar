diff --git a/builtin/fast-import.c b/builtin/fast-import.c
index 20406f6775..48d7f3dd66 100644
--- a/builtin/fast-import.c
+++ b/builtin/fast-import.c
@@ -737,7 +737,7 @@ static struct tree_content *dup_tree_content(struct tree_content *s)
 	return d;
 }
 
-static void start_packfile(void)
+static void real_start_packfile(void)
 {
 	struct strbuf tmp_file = STRBUF_INIT;
 	struct packed_git *p;
@@ -838,7 +838,7 @@ static int loosen_small_pack(const struct packed_git *p)
 	return run_command(&unpack);
 }
 
-static void end_packfile(void)
+static void real_end_packfile(void)
 {
 	static int running;
 
@@ -857,6 +857,7 @@ static void end_packfile(void)
 
 		close_pack_windows(pack_data);
 		finalize_hashfile(pack_file, cur_pack_oid.hash, 0);
+		pack_file = NULL;
 		fixup_pack_header_footer(pack_data->pack_fd, pack_data->hash,
 					 pack_data->pack_name, object_count,
 					 cur_pack_oid.hash, pack_size);
@@ -1639,7 +1640,7 @@ static int update_branch(struct branch *b)
 	return 0;
 }
 
-static void dump_branches(void)
+void dump_branches(void)
 {
 	unsigned int i;
 	struct branch *b;
@@ -2208,7 +2209,9 @@ static int parse_mapped_oid_hex(const char *hex, struct object_id *oid, const ch
  * Complain if the following character is not what is expected,
  * either a space or end of the string.
  */
-static uintmax_t parse_mark_ref(const char *p, char **endptr)
+static uintmax_t parse_mark_ref(const char *p, char **endptr);
+
+static uintmax_t real_parse_mark_ref(const char *p, char **endptr)
 {
 	uintmax_t mark;
 
@@ -2272,9 +2275,8 @@ static void file_change_m(const char *p, struct branch *b)
 	case S_IFDIR:
 	case S_IFGITLINK:
 		/* ok */
-		break;
 	default:
-		die("Corrupt mode: %s", command_buf.buf);
+		break;
 	}
 
 	if (*p == ':') {
